SERVICE_KEY = "*.DROP_OFF.IO.@{emissary.node.scheme}://@{emissary.node.name}:@{emissary.node.port}/DropOffPlace$9990"

SYNCHRONIZED_PROCESS = "false"
FAILURE_TERMINATES_CHAIN = "false"

UNIX_ROOT = "@{TMPDIR}/data/OutputData"

OUTPUT_DATA = "@{UNIX_ROOT}"

# Output filters can be named with NAME:CLASS
# The default name is the full class name if none is provided
#// TODO should we add a different filter?
OUTPUT_FILTER = "emissary.output.filter.DataFilter"
OUTPUT_FILTER = "emissary.output.filter.JsonOutputFilter"
# Output spec should match configured filter name
# (defaults to the full class name) and can contain
# @TLD{'KEY'} to pull the named KEY from the top level document Metadata
# @META{'KEY'} to pull the named KEY from the MetaData
# %U% = USER
# %I% = INPUT_FILE_NAME (whole thing)
# %S% = INPUT_FILE SHORT NAME
# %P% = INPUT_FILE PATH (all but short name)
# %i% = INPUT_FILE_NAME with slashes converted to underscores
# %p% = INPUT_FILE PATH with slashes converted to underscores
# %F% = FILETYPE
# %L% = LANGUAGE
# %G% = DATE multi directory layout yyyy-mm-dd/HH/MM(div)10
# %R% = ROOT (Unix or Win depending on OS)
# %B% = ID for the payload depending on type (without -att-)
# %b% = ID for the payload depending on type (with -att-)
# %Y% = Four digit year
# %M% = Two digit month
"OUTPUT_SPEC_BUD" = "%R%/%S%.%F%.out"

IMPORT_FILE = "emissary.output.DropOffUtil.cfg"

OUTPUT_COMPLETION_PAYLOAD_SIZE = "false"